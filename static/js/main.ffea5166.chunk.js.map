{"version":3,"sources":["components/Item.js","context/Context.js","components/Items.js","context/Reducer.js","context/State.js","index.js"],"names":["Item","item","thisStyle","background","backgroundColor","className","style","name","onClick","window","open","codeURL","viewURL","Context","createContext","Items","items","useContext","map","key","id","state","action","type","State","props","useReducer","Reducer","isBeta","dispatch","Provider","value","testFunction","data","children","App","ReactDOM","render","document","getElementById"],"mappings":"2KAoCeA,EAlCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KASRC,EAAY,CAChBC,WAAYF,EAAKG,iBAGnB,OACE,yBAAKC,UAAU,OAAOC,MAAOJ,GAC3B,yBAAKG,UAAU,SACXJ,EAAKM,MAET,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SAASG,QAlBR,WACpBC,OAAOC,KAAKT,EAAKU,WAkBX,yBAAKN,UAAU,QAAf,SAIF,yBAAKA,UAAU,SAASG,QAnBR,WACpBC,OAAOC,KAAKT,EAAKW,WAmBX,yBAAKP,UAAU,QAAf,YCvBKQ,EAFCC,0BC4BDC,EAxBD,WAAO,IACXC,EAAUC,qBAAWJ,GAArBG,MAER,OACE,yBAAKX,UAAU,aAEXW,EAAME,KAAI,SAAAjB,GAAI,OACZ,kBAAC,EAAD,CAAMkB,IAAKlB,EAAKmB,GAAInB,KAAMA,OAG9B,yBAAKI,UAAU,gBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,eADjB,UAIA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eADjB,c,cCrBO,WAACgB,EAAOC,GACrB,OAAQA,EAAOC,MACb,IAAK,OACH,OAAO,eACFF,GAEP,QACE,OAAOA,IC+DEG,EAlED,SAAAC,GACZ,IADqB,EA8CKC,qBAAWC,EA7ChB,CACnBX,MAAO,CACL,CACEI,GAAI,EACJb,KAAM,QACNH,gBAAiB,MACjBO,QAAS,kCACTC,QAAS,kCACTgB,QAAQ,GAEV,CACER,GAAI,EACJb,KAAM,eACNH,gBAAiB,OACjBO,QAAS,2CACTC,QAAS,2CACTgB,QAAQ,GAEV,CACER,GAAI,EACJb,KAAM,yBACNH,gBAAiB,UACjBO,QAAS,oDACTC,QAAS,oDACTgB,QAAQ,GAEV,CACER,GAAI,EACJb,KAAM,WACNH,gBAAiB,SACjBO,QAAS,uCACTC,QAAS,uCACTgB,QAAQ,GAEV,CACER,GAAI,EACJb,KAAM,eACNH,gBAAiB,UACjBO,QAAS,4CACTC,QAAS,4CACTgB,QAAQ,MAzCO,mBA8CdP,EA9Cc,KA8CPQ,EA9CO,KAsDrB,OACE,kBAAC,EAAQC,SAAT,CACEC,MAAO,CACLf,MAAOK,EAAML,MACbgB,aAVe,SAACC,GACpBJ,EAAS,CACPN,KAAM,YAWLE,EAAMS,WCxDPC,G,MAAM,WACV,OACE,kBAAC,EAAD,QAYJC,IAASC,OAAO,mBARO,WACrB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,SAKU,MAAoBC,SAASC,eAAe,U","file":"static/js/main.ffea5166.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Item = ({ item }) => {\r\n  const onCodeClicked = () => {\r\n    window.open(item.codeURL)\r\n  }\r\n  \r\n  const onViewClicked = () => {\r\n    window.open(item.viewURL)\r\n  }\r\n  \r\n  const thisStyle = {\r\n    background: item.backgroundColor,\r\n  }\r\n  \r\n  return (\r\n    <div className='item' style={thisStyle}>\r\n      <div className='title'>\r\n        { item.name }\r\n      </div>\r\n      <div className='button-panel'>\r\n        <div className='button' onClick={onCodeClicked}>\r\n          <div className='text'>\r\n            code\r\n          </div>\r\n        </div>\r\n        <div className='button' onClick={onViewClicked}>\r\n          <div className='text'>\r\n            view\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item","import { createContext } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;","import React, { useContext } from 'react'\r\n\r\nimport Item from './Item';\r\n\r\nimport Context from '../context/Context'\r\n\r\nconst Items = () => {\r\n  const { items } = useContext(Context)\r\n\r\n  return (\r\n    <div className='container'>\r\n      {\r\n        items.map(item => (\r\n          <Item key={item.id} item={item}/>\r\n        ))\r\n      }\r\n      <div className='bottom-right'>\r\n        <div className='github'>\r\n          <div className='background'></div>\r\n          github\r\n        </div>\r\n        <div className='contact'>\r\n          <div className='background'></div>\r\n          contact\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Items","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'test':\r\n      return {\r\n        ...state\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport Context from './Context';\r\nimport Reducer from './Reducer';\r\n\r\nconst State = props => {\r\n  const initialState = {\r\n    items: [\r\n      {\r\n        id: 1,\r\n        name: 'formi',\r\n        backgroundColor: 'tan',\r\n        codeURL: 'https://github.com/hamid814/r-p',\r\n        viewURL: 'https://hamid814.github.io/r-p/',\r\n        isBeta: false,\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'trello clone',\r\n        backgroundColor: 'teal',\r\n        codeURL: 'https://github.com/hamid814/trello-clone',\r\n        viewURL: 'https://hamid814.github.io/trello-clone/',\r\n        isBeta: false,\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'diprella sigin concept',\r\n        backgroundColor: '#cb9f24',\r\n        codeURL: 'https://github.com/hamid814/signup-signin-concept',\r\n        viewURL: 'https://hamid814.github.io/signup-signin-concept/',\r\n        isBeta: false,\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'todo app',\r\n        backgroundColor: 'tomato',\r\n        codeURL: 'https://github.com/hamid814/todo-app',\r\n        viewURL: 'https://hamid814.github.io/todo-app/',\r\n        isBeta: false,\r\n      },\r\n      {\r\n        id: 5,\r\n        name: 'my portfolio',\r\n        backgroundColor: '#a37e5b',\r\n        codeURL: 'https://github.com/hamid814/portfolio-app',\r\n        viewURL: 'https://hamid814.github.io/portfolio-app/',\r\n        isBeta: true,\r\n      },\r\n    ]\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n  const testFunction = (data) => {\r\n    dispatch({\r\n      type: 'test',\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        items: state.items,\r\n        testFunction,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default State;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Items from './components/Items';\n\nimport State from './context/State'\n\nimport './index.scss';\n\nconst App = () => {\n  return (\n    <Items />\n  );\n}\n\nconst StateContainer = () => {\n  return (\n    <State>\n      <App />\n    </State>\n  )\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}