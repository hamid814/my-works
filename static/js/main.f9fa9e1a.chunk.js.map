{"version":3,"sources":["context/Context.js","context/Reducer.js","context/State.js","index.js"],"names":["Context","createContext","state","action","type","State","props","useReducer","Reducer","data","dispatch","Provider","value","testFunction","children","App","useContext","console","log","ReactDOM","render","document","getElementById"],"mappings":"kLAIeA,EAFCC,0B,OCFD,WAACC,EAAOC,GACrB,OAAQA,EAAOC,MACb,IAAK,OACH,OAAO,eACFF,GAEP,QACE,OAAOA,ICsBEG,EAzBD,SAAAC,GACZ,IADqB,EAKKC,qBAAWC,EAJhB,CACnBC,KAAM,IAFa,mBAKdP,EALc,KAKPQ,EALO,KAarB,OACE,kBAAC,EAAQC,SAAT,CACEC,MAAO,CACLH,KAAMP,EAAMO,KACZI,aAVe,SAACJ,GACpBC,EAAS,CACPN,KAAM,YAWLE,EAAMQ,WChBPC,G,MAAM,WAAO,IACTN,EAASO,qBAAWhB,GAApBS,KAIR,OAFAQ,QAAQC,IAAIT,GAGV,sCAcJU,IAASC,OAAO,mBARO,WACrB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,SAKU,MAAoBC,SAASC,eAAe,U","file":"static/js/main.f9fa9e1a.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'test':\r\n      return {\r\n        ...state\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport Context from './Context';\r\nimport Reducer from './Reducer';\r\n\r\nconst State = props => {\r\n  const initialState = {\r\n    data: 1,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n  const testFunction = (data) => {\r\n    dispatch({\r\n      type: 'test',\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        data: state.data,\r\n        testFunction,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default State;","import React, { useContext } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport State from './context/State'\nimport Context from './context/Context'\n\nimport './index.css';\n\nconst App = () => {\n  const { data } = useContext(Context)\n  \n  console.log(data)\n\n  return (\n    <div>\n      hi!\n    </div>\n  );\n}\n\nconst StateContainer = () => {\n  return (\n    <State>\n      <App />\n    </State>\n  )\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}